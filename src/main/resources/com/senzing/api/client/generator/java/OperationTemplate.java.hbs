package {{packageName}};

import java.util.Objects;
{{#each imports}}import {{.}};
{{/each}}
/**
 * {{description}}
 */
public class {{className}} {{#if extends}}extends {{extends}} {{/if}}{
{{#each params}}{{#if hasDefault}}  /**
   * The default value for the {{name}} parameter.
   *
   * @see #{{name}}({{{type}}})
   */
  public static final {{{type}}} DEFAULT_{{NAME}} = {{defaultValue}};

{{/if}}{{/each}}  /**
   * A reference to the service instance that created this operation.
   */
   private {{serviceClassName}} service;

{{#each params}}  /**
   * {{description}}
   */
  private {{{type}}} {{name}};

{{/each}}  /**
   * Default constructor.
   */
  public {{className}}() {
{{#each params}}    this.{{name}} = {{#if hasDefault}}DEFAULT_{{NAME}}{{else}}{{initialValue}}{{/if}};
{{/each}}  }
{{#each props}}
  /**
   * Getter for {{name}}.  {{description}}
   *
   * @return The value of {{name}}.
   */
  public {{{type}}} get{{Name}}() {
    return this.{{name}};
  }

  /**
   * Setter for {{name}}.  {{description}}
   *
   * @param value The value for {{name}}.
   */
  public void set{{Name}}({{{type}}} value) {
    this.{{name}} = value;
  }

  /**
   * Chain setter for {{name}}.  {{description}}
   *
   * @param value The value for {{name}}.
   */
  public {{../className}} {{name}}({{{type}}} value) {
    this.set{{Name}}(value);
    return this;
  }
{{/each}}
  /**
   * Overridden to return a diagnostic {@link String} describing this instance.
   *
   * @return A diagnostic {@link String} describing this instance.
   */
  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("{ ");
{{#each props}}    sb.append("{{name}}=[ ").append(this.get{{Name}}()).append(" ]{{#unless @last}}, {{/unless}}");
{{/each}}    sb.append(" }");
    return sb.toString();
  }
}
